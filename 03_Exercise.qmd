
# Exercise: Data Wrangling

```{r, include = FALSE}

library(nycflights13)
library(tidyverse) # don't forget to load this library

```


## Part 1

Install the package 'nycflights13'. This contains the dataset `flights` for this exercise. This data frame contains data on all flights that departed from New York city in the year 2013. It is a big dataset, and something where our new tools come in very handy.

```{r, eval = FALSE}
install.packages("nycflights13")
library(nycflights13)

flights

library(tidyverse) # don't forget to load this library

```

### Exploration

Start off by familiarizing yourself with the dataset using R-help. 

### filter()

Find all flights that

1. departed in November and December

2. arrived with a delay of more than 2 hours

3. were operated by United Airlines (UA) or American Airlines (AA)

4. departed with a delay, but arrived earlier than scheduled. 


### select()

1. Narrow down the dataset to the first nine columns. There is a quick way and a tedious way. 

2. Repeat the above and include air_time and exclude sched_dep_time. 

3. There is various helper functions for select(). Two examples are shown below. Check out what they do, and also consult the help to understand them in more detail.

```{r, eval = FALSE}

flights %>% 
  select(starts_with("dep"))

flights %>% 
  select(year:day, contains("dep"))


```

4. Brainstorm a few ways to select `dep_time`, `dep_delay`, `arr_time`, `arr_delay`. 

:::{.callout-tip collapse="true"}

## Solution

```{r, eval = FALSE}
flights %>% 
  select(starts_with("dep"), starts_with("arr"))

flights %>% 
  select(contains("dep_"), contains("arr_"), -contains("sched"))


vars <- c("dep_time", "dep_delay", "arr_time", "arr_delay")

flights %>% 
  select(vars)

```

:::


## 3. Calculate a new variable: mutate()

1. Calculate a new variable `gain` that describes how many minutes delay are compensated during each flight (`dep_delay - arr_delay`). 

2. Calculate a new variable of gain per hour of flight. 

## 4. Advanced 

1. Which airline had the maximum gain per hour on the 24th of december? You could try using arrange() and/or using a graphic visualisation. 

:::{.callout-tip collapse="true"}

## Solution

```{r, eval = FALSE}
flights %>% 
  mutate(gain = dep_delay - arr_delay, 
         hours = air_time / 60, 
         gain_per_hour = gain / hours) %>% 
   filter(month == 12, day == 24) %>% 
   ggplot(aes(x = carrier, y = gain_per_hour, fill = carrier)) + 
  geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.2)
  

flights %>% 
  mutate(gain = dep_delay - arr_delay, 
         hours = air_time / 60, 
         gain_per_hour = gain / hours) %>% 
   filter(month == 12, day == 24) %>% 
  arrange(desc(gain_per_hour)) %>% 
  select(carrier, gain_per_hour)
  
```

:::


# Part 2


## 5. Grouping & Summarising

1. Which day had on average the largest delay (`dep_delay`)? What happens if you don't take care of `NA's`?

2. Which day has the shortest delay? What do negative delays mean? what is the day with shortest positive delay?

3. Which airline did carry out the most number of flights? 

4. Which destination had on average the largest arrival delay?

5. How does the average delay at arrival relate to the distance of the destination? Combine your data wrangling and visualisation skills. Exclude Honolulu ("HNL") from this analysis and only take destinations into account which had at least 20 flights during the year. 


:::{.callout-tip collapse="true"}

## Solution

1. Which day had on average the largest delay (`dep_delay`)? What happens if you don't take care of `NA's`?
```{r, eval = FALSE}
by_day <- flights %>% 
  group_by(year, month, day) %>% 
  summarise(delay = mean(dep_delay, na.rm=TRUE)) %>% 
  arrange(desc(delay))

by_day


```


2. Which day has the shortest delay? What do negative delays mean? what is the day with shortest positive delay?

```{r, eval = FALSE}
by_day %>% 
  arrange(delay)

by_day %>% 
  filter(delay > 0) %>% 
  arrange(delay)

```



3. Which airline did carry out the most number of flights? 

```{r, eval = FALSE}

flights %>% 
  group_by(carrier) %>% 
  summarize(count = n()) %>% 
  arrange(desc(count))

```


4. Which destination had on average the largest arrival delay?

```{r, eval = FALSE}

flights %>% 
  group_by(dest) %>% 
  summarize(avg_delay = mean(arr_delay, na.rm=TRUE)) %>% 
  arrange(desc(avg_delay))

```



5. How does the average delay at arrival relate to the distance of the destination? Combine your data wrangling and visualisation skills. Exclude Honolulu ("HNL") from this analysis and only take destinations into account which had at least 20 flights during the year. 

```{r, eval = FALSE}
by_dest <- flights %>% 
  group_by(dest) %>% 
  summarise(delay = mean(arr_delay, na.rm = TRUE), 
            distance = mean(distance, na.rm=TRUE), 
            count = n())

by_dest %>% 
  arrange(desc(delay))

by_dest %>% 
  filter(dest != "HNL", count > 20) %>% 
  ggplot(aes(x = distance, y = delay)) +
  geom_point(alpha = 1/3, aes(size = count)) +
  geom_smooth()

```



:::